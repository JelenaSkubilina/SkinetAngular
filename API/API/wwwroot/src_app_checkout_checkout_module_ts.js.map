{"version":3,"file":"src_app_checkout_checkout_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAyD;AAEd;AACoB;IAQlD,wBAAwB,SAAxB,wBAAwB;IAGnC,YAAoB,cAA8B,EACxC,MAAqB;QADX,mBAAc,GAAd,cAAc,CAAgB;QACxC,WAAM,GAAN,MAAM,CAAe;IAAI,CAAC;IAEpC,QAAQ;IACR,CAAC;IAED,eAAe;QACb,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC;aAC9E,SAAS,CAAC,CAAC,OAAiB,EAAE,EAAE;YAC/B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;YACrC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QACtD,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YACjC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACP,CAAC;CACF;;YA3BQ,oEAAc;YADd,qDAAa;;;2BAUnB,gDAAK;;AADK,wBAAwB;IALpC,wDAAS,CAAC;QACT,QAAQ,EAAE,sBAAsB;QAChC,kFAAgD;;KAEjD,CAAC;GACW,wBAAwB,CAmBpC;AAnBoC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXoB;AAEG;AAEN;IAOzC,yBAAyB,SAAzB,yBAAyB;IAIpC,YAAoB,eAAgC,EAC1C,aAA4B;QADlB,oBAAe,GAAf,eAAe,CAAiB;QAC1C,kBAAa,GAAb,aAAa,CAAe;IAAI,CAAC;IAE3C,QAAQ;QACN,IAAI,CAAC,eAAe,CAAC,kBAAkB,EAAE,CAAC,SAAS,CAAC,CAAC,EAAqB,EAAE,EAAE;YAC5E,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC5B,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gBAAgB,CAAC,cAA+B;QAC9C,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC;IACtD,CAAC;CAEF;;YA1BQ,8DAAe;YAFf,iEAAa;;;2BAUnB,gDAAK;;AADK,yBAAyB;IALrC,wDAAS,CAAC;QACT,QAAQ,EAAE,uBAAuB;QACjC,mFAAiD;;KAElD,CAAC;GACW,yBAAyB,CAmBrC;AAnBqC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXiD;AACrC;AAES;AAChB;AAEiB;AAGN;IASzC,wBAAwB,SAAxB,wBAAwB;IAgBnC,YAAoB,aAA4B,EACtC,eAAgC,EAChC,MAAqB,EACrB,MAAc;QAHJ,kBAAa,GAAb,aAAa,CAAe;QACtC,oBAAe,GAAf,eAAe,CAAiB;QAChC,WAAM,GAAN,MAAM,CAAe;QACrB,WAAM,GAAN,MAAM,CAAQ;QATxB,gBAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvC,YAAO,GAAG,KAAK,CAAC;QAChB,oBAAe,GAAG,KAAK,CAAC;QACxB,oBAAe,GAAG,KAAK,CAAC;QACxB,iBAAY,GAAG,KAAK,CAAC;IAMjB,CAAC;IAEL,eAAe;QACb,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,6GAA6G,CAAC,CAAC;QACpI,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;QAExC,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;QAChD,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,CAAC;QAC5D,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QAE7D,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;QAChD,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QAC7D,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,CAAC;QAE5D,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QAC1C,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC;QACtD,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;IAC5D,CAAC;IAED,WAAW;QACT,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;QAC1B,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;QAC1B,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;IACzB,CAAC;IAED,QAAQ,CAAC,KAAK;QAEZ,IAAI,KAAK,CAAC,KAAK,EAAE;YACf,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC;SACvC;aAAM;YACL,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;SACxB;QAED,QAAQ,KAAK,CAAC,WAAW,EAAE;YACzB,KAAK,YAAY;gBACf,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC,QAAQ,CAAC;gBACtC,MAAM;YACR,KAAK,YAAY;gBACf,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC,QAAQ,CAAC;gBACtC,MAAM;YACR,KAAK,SAAS;gBACZ,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,QAAQ,CAAC;gBACnC,MAAM;SACT;IACH,CAAC;IAEK,WAAW;;YACf,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,MAAM,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,qBAAqB,EAAE,CAAC;YAC1D,IAAI;gBACF,MAAM,YAAY,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;gBACpD,MAAM,aAAa,GAAG,MAAM,IAAI,CAAC,wBAAwB,CAAC,MAAM,CAAC,CAAC;gBAElE,IAAI,aAAa,CAAC,aAAa,EAAE;oBAC/B,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;oBACxC,MAAM,gBAAgB,GAAqB,EAAE,KAAK,EAAE,YAAY,EAAE,CAAC;oBACnE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,kBAAkB,CAAC,EAAE,gBAAgB,CAAC,CAAC;iBAC9D;qBAAM;oBACL,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,aAAa,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;iBAChD;gBACD,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;aACtB;YAAC,OAAO,KAAK,EAAE;gBACd,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACnB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;aACtB;QACH,CAAC;KAAA;IAEa,wBAAwB,CAAC,MAAe;;YACpD,OAAO,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,MAAM,CAAC,YAAY,EAAE;gBACzD,cAAc,EAAE;oBACd,IAAI,EAAE,IAAI,CAAC,UAAU;oBACrB,eAAe,EAAE;wBACf,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,KAAK;qBACnE;iBACF;aACF,CAAC;QACJ,CAAC;KAAA;IAEa,WAAW,CAAC,MAAe;;YACvC,MAAM,aAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;YACpD,OAAO,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,SAAS,EAAE,CAAC;QACrE,CAAC;KAAA;IAEO,gBAAgB,CAAC,MAAe;QACtC,OAAO;YACL,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,gBAAgB,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,KAAK;YACpF,aAAa,EAAE,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,KAAK;SAC1D,CAAC;IACJ,CAAC;CACF;;YA1HQ,iEAAa;YAGb,8DAAe;YALf,qDAAa;YADK,mDAAM;;;2BAgB9B,gDAAK;gCACL,oDAAS,SAAC,YAAY,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;gCACxC,oDAAS,SAAC,YAAY,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;6BACxC,oDAAS,SAAC,SAAS,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;;AAJ3B,wBAAwB;IALpC,wDAAS,CAAC;QACT,QAAQ,EAAE,sBAAsB;QAChC,kFAAgD;;KAEjD,CAAC;GACW,wBAAwB,CA8GpC;AA9GoC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBoB;AACP;AAEU;IAQ/C,uBAAuB,SAAvB,uBAAuB;IAIlC,YAAoB,MAAqB,EAC/B,aAA4B;QADlB,WAAM,GAAN,MAAM,CAAe;QAC/B,kBAAa,GAAb,aAAa,CAAe;IAAI,CAAC;IAE3C,QAAQ;IACR,CAAC;IAED,mBAAmB;QACjB,OAAO,IAAI,CAAC,aAAa,CAAC,mBAAmB,EAAE,CAAC,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;YAC1E,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;QACzB,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;CACF;;YA3Be,qDAAa;YAEpB,iEAAa;;;yBAUnB,gDAAK;;AAFK,uBAAuB;IALnC,wDAAS,CAAC;QACT,QAAQ,EAAE,qBAAqB;QAC/B,iFAA+C;;KAEhD,CAAC;GACW,uBAAuB,CAiBnC;AAjBmC;;;;;;;;;;;;;;;;;;;;;;;;;ACZK;AAEc;AACE;AACgC;AAEzF,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,kEAAiB,EAAE;IAC1C,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,kGAAwB,EAAE;CACzD,CAAC;IASW,qBAAqB,SAArB,qBAAqB;CAAI;AAAzB,qBAAqB;IAPjC,uDAAQ,CAAC;QACR,YAAY,EAAE,EAAE;QAChB,OAAO,EAAE;YACP,kEAAqB,CAAC,MAAM,CAAC;SAC9B;QACD,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,qBAAqB,CAAI;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBgB;AACT;IAQ5B,wBAAwB,SAAxB,wBAAwB;IAGnC,YAAoB,MAAc;;QAAd,WAAM,GAAN,MAAM,CAAQ;QAChC,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE,CAAC;QACtD,MAAM,KAAK,GAAG,gBAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,MAAM,0CAAE,KAAK,CAAC;QAExC,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,KAAK,GAAG,KAAe,CAAC;SAC9B;IACH,CAAC;IAED,QAAQ;IACR,CAAC;CAEF;;YAvBQ,mDAAM;;AAQF,wBAAwB;IALpC,wDAAS,CAAC;QACT,QAAQ,EAAE,sBAAsB;QAChC,kFAAgD;;KAEjD,CAAC;GACW,wBAAwB,CAepC;AAfoC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTa;AACkB;AAER;AACH;IAQ5C,iBAAiB,SAAjB,iBAAiB;IAI5B,YAAoB,EAAe,EACzB,aAA4B,EAC5B,cAA8B;QAFpB,OAAE,GAAF,EAAE,CAAa;QACzB,kBAAa,GAAb,aAAa,CAAe;QAC5B,mBAAc,GAAd,cAAc,CAAgB;IAAI,CAAC;IAE7C,QAAQ;QACN,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAC9B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC;IACvD,CAAC;IAED,kBAAkB;QAChB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAChC,WAAW,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBACzB,SAAS,EAAE,CAAC,IAAI,EAAE,+DAAmB,CAAC;gBACtC,QAAQ,EAAE,CAAC,IAAI,EAAE,+DAAmB,CAAC;gBACrC,MAAM,EAAE,CAAC,IAAI,EAAE,+DAAmB,CAAC;gBACnC,IAAI,EAAE,CAAC,IAAI,EAAE,+DAAmB,CAAC;gBACjC,KAAK,EAAE,CAAC,IAAI,EAAE,+DAAmB,CAAC;gBAClC,OAAO,EAAE,CAAC,IAAI,EAAE,+DAAmB,CAAC;aACrC,CAAC;YACF,YAAY,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBAC1B,cAAc,EAAE,CAAC,IAAI,EAAE,+DAAmB,CAAC;aAC5C,CAAC;YACF,WAAW,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBACzB,UAAU,EAAE,CAAC,IAAI,EAAE,+DAAmB,CAAC;aACxC,CAAC;SACH,CAAC,CAAC;IACL,CAAC;IAED,oBAAoB;QAClB,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE;YACvD,IAAI,OAAO,EAAE;gBACX,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;aAC1D;QACH,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sBAAsB;QACpB,MAAM,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,qBAAqB,EAAE,CAAC;QAC1D,IAAI,MAAM,CAAC,gBAAgB,KAAK,IAAI,EAAE;YACpC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,CAAC,CAAC;SAC5G;IACH,CAAC;CACF;;YA7DQ,uDAAW;YAGX,iEAAa;YADb,oEAAc;;AASV,iBAAiB;IAL7B,wDAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,0EAAwC;;KAEzC,CAAC;GACW,iBAAiB,CAkD7B;AAlD6B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZW;AACM;AACU;AACS;AACX;AACkC;AACG;AACN;AACG;AACA;IAmB5E,cAAc,SAAd,cAAc;CAAI;AAAlB,cAAc;IAf1B,uDAAQ,CAAC;QACR,YAAY,EAAE;YACZ,kEAAiB;YACjB,kGAAwB;YACxB,qGAAyB;YACzB,+FAAuB;YACvB,kGAAwB;YACxB,kGAAwB;SACzB;QACD,OAAO,EAAE;YACP,yDAAY;YACZ,2EAAqB;YACrB,+DAAY;SACb;KACF,CAAC;GACW,cAAc,CAAI;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;AC5BuB;AACP;AACN;AACwB;IAOhD,eAAe,SAAf,eAAe;IAG1B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFpC,YAAO,GAAG,yEAAkB,CAAC;IAEW,CAAC;IAEzC,WAAW,CAAC,KAAqB;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,QAAQ,EAAE,KAAK,CAAC,CAAC;IACxD,CAAC;IAED,kBAAkB;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,wBAAwB,CAAC,CAAC,IAAI,CAChE,mDAAG,CAAC,CAAC,EAAqB,EAAE,EAAE;YAC5B,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC;QAC9C,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;CACF;;YA1BQ,4DAAU;;AAUN,eAAe;IAH3B,yDAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,eAAe,CAgB3B;AAhB2B","sources":["./src/app/checkout/checkout-address/checkout-address.component.ts","./src/app/checkout/checkout-delivery/checkout-delivery.component.ts","./src/app/checkout/checkout-payment/checkout-payment.component.ts","./src/app/checkout/checkout-review/checkout-review.component.ts","./src/app/checkout/checkout-routing.module.ts","./src/app/checkout/checkout-success/checkout-success.component.ts","./src/app/checkout/checkout.component.ts","./src/app/checkout/checkout.module.ts","./src/app/checkout/checkout.service.ts"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AccountService } from '../../account/account.service';\r\nimport { IAddress } from '../../shared/models/address';\r\n\n@Component({\n  selector: 'app-checkout-address',\n  templateUrl: './checkout-address.component.html',\n  styleUrls: ['./checkout-address.component.css']\n})\nexport class CheckoutAddressComponent implements OnInit {\n  @Input() checkoutForm: FormGroup;\n\n  constructor(private accountService: AccountService,\n    private toastr: ToastrService) { }\n\n  ngOnInit(): void {\n  }\n\n  saveUserAddress() {\n    this.accountService.updateUserAddress(this.checkoutForm.get('addressForm').value)\r\n      .subscribe((address: IAddress) => {\r\n        this.toastr.success('Address saved');\r\n        this.checkoutForm.get('addressForm').reset(address);\r\n      }, error => {\r\n        this.toastr.error(error.message);\r\n        console.log(error);\r\n      });\r\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\r\nimport { BasketService } from '../../basket/basket.service';\r\nimport { IDeliveryMethod } from '../../shared/models/deliveryMethod';\r\nimport { CheckoutService } from '../checkout.service';\r\n\n@Component({\n  selector: 'app-checkout-delivery',\n  templateUrl: './checkout-delivery.component.html',\n  styleUrls: ['./checkout-delivery.component.css']\n})\nexport class CheckoutDeliveryComponent implements OnInit {\n  @Input() checkoutForm: FormGroup;\n  deliveryMethods: IDeliveryMethod[];\n\n  constructor(private checkoutService: CheckoutService,\n    private basketService: BasketService) { }\n\n  ngOnInit(): void {\n    this.checkoutService.getDeliveryMethods().subscribe((dm: IDeliveryMethod[]) => {\n      this.deliveryMethods = dm;\r\n    }, error => {\n      console.log(error);\r\n    });\n  }\n\n  setShippingPrice(deliveryMethod: IDeliveryMethod) {\n    this.basketService.setShippingPrice(deliveryMethod);\r\n  }\n\n}\n","import { AfterViewInit, ElementRef, Input, OnDestroy, ViewChild } from '@angular/core';\r\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\r\nimport { NavigationExtras, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { retry } from 'rxjs/operators';\r\nimport { BasketService } from '../../basket/basket.service';\r\nimport { IBasket } from '../../shared/models/basket';\r\nimport { IOrder } from '../../shared/models/order';\r\nimport { CheckoutService } from '../checkout.service';\r\n\r\ndeclare var Stripe;\r\n\n@Component({\n  selector: 'app-checkout-payment',\n  templateUrl: './checkout-payment.component.html',\n  styleUrls: ['./checkout-payment.component.css']\n})\nexport class CheckoutPaymentComponent implements AfterViewInit, OnDestroy {\n  @Input() checkoutForm: FormGroup;\n  @ViewChild('cardNumber', { static: true }) cardNumberElement: ElementRef;\n  @ViewChild('cardExpiry', { static: true }) cardExpiryElement: ElementRef;\n  @ViewChild('cardCvc', { static: true }) cardCvcElement: ElementRef;\n  stripe: any;\n  cardNumber: any;\n  cardExpiry: any;\n  cardCvc: any;\n  cardErrors: any;\n  cardHandler = this.onChange.bind(this);\n  loading = false;\n  cardNumberValid = false;\n  cardExpiryValid = false;\n  cardCvcValid = false;\n\n  constructor(private basketService: BasketService,\n    private checkoutService: CheckoutService,\n    private toastr: ToastrService,\n    private router: Router\n  ) { }\n\n  ngAfterViewInit(): void {\n    this.stripe = Stripe('pk_test_51KTqUyBcjENIMzHxkoZC9gqyAvEyRP4KthjkgWG4LSPROtnId6gHCpOjViQGih4xEe4w4yTVkZwNzdUFzIq0i03P00cpfC0I8B');\n    const elements = this.stripe.elements();\n\n    this.cardNumber = elements.create('cardNumber');\n    this.cardNumber.mount(this.cardNumberElement.nativeElement);\n    this.cardNumber.addEventListener('change', this.cardHandler);\n\n    this.cardExpiry = elements.create('cardExpiry');\n    this.cardExpiry.addEventListener('change', this.cardHandler);\n    this.cardExpiry.mount(this.cardExpiryElement.nativeElement);\n\n    this.cardCvc = elements.create('cardCvc');\n    this.cardCvc.mount(this.cardCvcElement.nativeElement);\n    this.cardCvc.addEventListener('change', this.cardHandler);\n  }\n\n  ngOnDestroy() {\n    this.cardNumber.destroy();\r\n    this.cardExpiry.destroy();\r\n    this.cardCvc.destroy();\r\n  }\n\n  onChange(event) {\n    \n    if (event.error) {\r\n      this.cardErrors = event.error.message;\r\n    } else {\r\n      this.cardErrors = null;\r\n    }\r\n\r\n    switch (event.elementType) {\r\n      case 'cardNumber':\r\n        this.cardNumberValid = event.complete;\r\n        break;\r\n      case 'cardExpiry':\r\n        this.cardExpiryValid = event.complete;\r\n        break;\r\n      case 'cardCvc':\r\n        this.cardCvcValid = event.complete;\r\n        break;\r\n    }\r\n  }\n\n  async submitOrder() {\n    this.loading = true;\n    const basket = this.basketService.getCurrentBasketValue();\r\n    try {\r\n      const createdOrder = await this.createOrder(basket);\r\n      const paymentResult = await this.confirmPaymentWithStripe(basket);\r\n\r\n      if (paymentResult.paymentIntent) {\r\n        this.basketService.deleteBasket(basket);\r\n        const navigationExtras: NavigationExtras = { state: createdOrder };\r\n        this.router.navigate(['checkout/success'], navigationExtras);\r\n      } else {\r\n        this.toastr.error(paymentResult.error.message);\r\n      }\r\n      this.loading = false;\r\n    } catch (error) {\r\n      console.log(error);\r\n      this.loading = false;\r\n    }\r\n  }\n\n  private async confirmPaymentWithStripe(basket: IBasket) {\r\n    return this.stripe.confirmCardPayment(basket.clientSecret, {\r\n      payment_method: {\r\n        card: this.cardNumber,\r\n        billing_details: {\r\n          name: this.checkoutForm.get('paymentForm').get('nameOnCard').value\r\n        }\r\n      }\r\n    })\r\n  }\r\n\n  private async createOrder(basket: IBasket) {\r\n    const orderToCreate = this.getOrderToCreate(basket);\r\n    return this.checkoutService.createOrder(orderToCreate).toPromise();\r\n  }\r\n\n  private getOrderToCreate(basket: IBasket) {\n    return {\r\n      basketId: basket.id,\r\n      deliveryMethodId: +this.checkoutForm.get('deliveryForm').get('deliveryMethod').value,\r\n      shipToAddress: this.checkoutForm.get('addressForm').value\r\n    };\r\n  }\n}\n","import { CdkStepper } from '@angular/cdk/stepper';\r\nimport { Component, Input, OnInit } from '@angular/core';\nimport { Toast, ToastrService } from 'ngx-toastr';\r\nimport { Observable } from 'rxjs';\r\nimport { BasketService } from '../../basket/basket.service';\r\nimport { IBasket } from '../../shared/models/basket';\r\n\n@Component({\n  selector: 'app-checkout-review',\n  templateUrl: './checkout-review.component.html',\n  styleUrls: ['./checkout-review.component.css']\n})\nexport class CheckoutReviewComponent implements OnInit {\n  basket$: Observable<IBasket>;\n  @Input() appStepper: CdkStepper;\n\n  constructor(private toastr: ToastrService,\n    private basketService: BasketService) { }\n\n  ngOnInit(): void {\n  }\n\n  createPaymentIntent() {\n    return this.basketService.createPaymentIntent().subscribe((response: any) => {\r\n      this.appStepper.next();\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CheckoutComponent } from './checkout.component';\r\nimport { CheckoutSuccessComponent } from './checkout-success/checkout-success.component';\r\n\nconst routes: Routes = [\n  { path: '', component: CheckoutComponent },\n  { path: 'success', component: CheckoutSuccessComponent }\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class CheckoutRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\r\nimport { IOrder } from '../../shared/models/order';\r\n\n@Component({\n  selector: 'app-checkout-success',\n  templateUrl: './checkout-success.component.html',\n  styleUrls: ['./checkout-success.component.css']\n})\nexport class CheckoutSuccessComponent implements OnInit {\n  order: IOrder;\n\n  constructor(private router: Router) {\n    const navigation = this.router.getCurrentNavigation();\n    const state = navigation?.extras?.state;\n\n    if (state) {\n      this.order = state as IOrder;\r\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { AccountService } from '../account/account.service';\r\nimport { BasketService } from '../basket/basket.service';\r\nimport { IBasketTotal } from '../shared/models/basket';\r\n\n@Component({\n  selector: 'app-checkout',\n  templateUrl: './checkout.component.html',\n  styleUrls: ['./checkout.component.css']\n})\nexport class CheckoutComponent implements OnInit {\n  basketTotals$: Observable<IBasketTotal>;\n  checkoutForm: FormGroup;\n\n  constructor(private fb: FormBuilder,\n    private basketService: BasketService,\n    private accountService: AccountService) { }\n\n  ngOnInit(): void {\n    this.createCheckoutForm();\n    this.getAddressFormValues();\n    this.getDeliveryMethodValue();\n    this.basketTotals$ = this.basketService.basketTotal$;\n  }\n\n  createCheckoutForm() {\n    this.checkoutForm = this.fb.group({\r\n      addressForm: this.fb.group({\r\n        firstName: [null, Validators.required],\r\n        lastName: [null, Validators.required],\r\n        street: [null, Validators.required],\r\n        city: [null, Validators.required],\r\n        state: [null, Validators.required],\r\n        zipcode: [null, Validators.required]\r\n      }),\r\n      deliveryForm: this.fb.group({\r\n        deliveryMethod: [null, Validators.required],\r\n      }),\r\n      paymentForm: this.fb.group({\r\n        nameOnCard: [null, Validators.required],\r\n      })\r\n    });\r\n  }\n\n  getAddressFormValues() {\n    this.accountService.getUserAddress().subscribe(address => {\r\n      if (address) {\r\n        this.checkoutForm.get('addressForm').patchValue(address);\r\n      }\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n  }\n\n  getDeliveryMethodValue() {\n    const basket = this.basketService.getCurrentBasketValue();\r\n    if (basket.deliveryMethodId === null) {\r\n      this.checkoutForm.get('deliveryForm').get('deliveryMethod').patchValue(basket.deliveryMethodId.toString());\r\n    }\r\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CheckoutComponent } from './checkout.component';\r\nimport { CheckoutRoutingModule } from './checkout-routing.module';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { CheckoutAddressComponent } from './checkout-address/checkout-address.component';\r\nimport { CheckoutDeliveryComponent } from './checkout-delivery/checkout-delivery.component';\r\nimport { CheckoutReviewComponent } from './checkout-review/checkout-review.component';\r\nimport { CheckoutPaymentComponent } from './checkout-payment/checkout-payment.component';\r\nimport { CheckoutSuccessComponent } from './checkout-success/checkout-success.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CheckoutComponent,\r\n    CheckoutAddressComponent,\r\n    CheckoutDeliveryComponent,\r\n    CheckoutReviewComponent,\r\n    CheckoutPaymentComponent,\r\n    CheckoutSuccessComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    CheckoutRoutingModule,\r\n    SharedModule\r\n  ]\r\n})\r\nexport class CheckoutModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../environments/environment';\r\nimport { IDeliveryMethod } from '../shared/models/deliveryMethod';\r\nimport { IOrderToCreate } from '../shared/models/order';\r\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CheckoutService {\n  baseUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient) { }\n\n  createOrder(order: IOrderToCreate) {\n    return this.http.post(this.baseUrl + 'orders', order);\r\n  }\n\n  getDeliveryMethods() {\n    return this.http.get(this.baseUrl + 'orders/deliveryMethods').pipe(\r\n      map((dm: IDeliveryMethod[]) => {\r\n        return dm.sort((a, b) => b.price - a.price);\r\n      })\r\n    );\r\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///"}